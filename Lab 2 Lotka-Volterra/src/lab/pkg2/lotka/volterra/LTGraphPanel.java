package lab.pkg2.lotka.volterra;

import java.awt.*;

/**
 *
 * @author sophiaanderson Feb 1, 2018 5:34:28 PM
 */
public class LTGraphPanel extends javax.swing.JPanel {
   

    public LTGraphPanel() {
        initComponents();
        setLayout(null);
        setVisible(true);
    }
    
    int left, top, right, bottom, hRange, vRange;
    int herbRange, predRange, herbMin, herbMax, predMin, predMax;
    DataList list = LVFrame.list;
    
    public void paintComponent(Graphics g) {
        System.out.println("paintommp"+list.size());
        Rectangle r = this.getVisibleRect();
        
        left = r.x+ 40;
        right = r.width - left;
        top = r.y + 40;
        bottom = r.height-top;
        
        herbMin = herbMax = list.get(0).getH();
        predMin = predMax = list.get(0).getP();
        
        for(DataPair nextPair : list)
        {
            if(herbMin > nextPair.getH() && (nextPair.getH() >= 0)){herbMin = nextPair.getH();}
            if(herbMax < nextPair.getH()){herbMax = nextPair.getH();}
            if(predMin > nextPair.getH() && (nextPair.getP() >= 0)){predMin = nextPair.getH();}
            if(predMax < nextPair.getH()){predMax = nextPair.getH();}
        }
        
        herbRange = herbMax - herbMin;
        predRange = predMax - predMin;
        
        vRange = bottom - top - 40; //*****************
        hRange = right - left;
        
        drawGraph(g);
        drawHTicks(g);
        drawPTicks(g);
        drawH(g, list);
        drawP(g, list);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
    
    public void drawGraph(Graphics g)
    {
        g.drawLine(left, top-40, left, bottom);
        g.drawLine(left, bottom, right, bottom);
    }
    
    public void drawH(Graphics g, DataList list)
    {
        int i = 0;
        for (DataPair nextSet : list)
        {
            int herb = nextSet.getH();
            i++;
            int y = bottom - ((herb+herbMin)*vRange)/herbRange - 5;
            int x = (i*hRange/list.size())+left;
            g.setColor(Color.green);
            g.drawOval(x, y, 5, 5);
        }
        
    }
    
    public void drawHTicks(Graphics g)
    {
        for(int x = hRange/10; x<hRange; x+=hRange/10)
        {
            g.drawLine(left+x, bottom-5, left+x, bottom-5);
        }
    }
    
    public void drawPTicks(Graphics g)
    {
        for(int y = 0; y>vRange; y+=vRange/10)
        {
            g.drawLine(left+5, bottom-y, left-5, bottom-y);
        }
    }
    
    public void drawP(Graphics g, DataList list)
    {
        int i = 0;
        System.out.println("list.size() = " + list.size());
        for (DataPair nextSet : list)
        {
            int pred = nextSet.getP();
            i++;
            int y = bottom - ((pred+predMin)*vRange)/predRange - 5;
            int x = (i*hRange/list.size())+left;
            g.setColor(Color.red);
            g.drawOval(x, y, 5, 5);
        }
    }
    
    

    
}
