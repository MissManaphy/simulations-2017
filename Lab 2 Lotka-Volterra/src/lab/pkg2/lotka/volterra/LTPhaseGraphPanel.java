package lab.pkg2.lotka.volterra;

import java.awt.*;

/**
 *
 * @author sophiaanderson Feb 1, 2018 10:02:14 PM
 */
public class LTPhaseGraphPanel extends javax.swing.JPanel {

    public LTPhaseGraphPanel() {
        initComponents();
        setLayout(null);
        setVisible(true);
    }
    
    int left, top, right, bottom, hRange, vRange;
    int herbRange, predRange, herbMin, herbMax, predMin, predMax;
    DataList list = LVFrame.list;
    
    public void paintComponent(Graphics g) {
        Rectangle r = this.getVisibleRect();
        
        left = r.x+ 40;
        right = r.width - left;
        top = r.y + 40;
        bottom = r.height-top;
        
        herbMin = herbMax = list.get(0).getH();
        predMin = predMax = list.get(0).getP();
        
        for(DataPair nextPair : list)
        {
            //System.out.println("in the max min loop!");
            if(herbMin > nextPair.getH() && (nextPair.getH() >= 0)){herbMin = nextPair.getH();}
            if(herbMax < nextPair.getH()){herbMax = nextPair.getH();}
            if(predMin > nextPair.getH() && (nextPair.getP() >= 0)){predMin = nextPair.getH();}
            if(predMax < nextPair.getH()){predMax = nextPair.getH();}
        }
//        System.out.println("herbMax = " + herbMax);
//        System.out.println("herbMin = " + herbMin);
        
        herbRange = herbMax - herbMin;
        predRange = predMax - predMin;
//        System.out.println("herbRange = " + herbRange);
        
        vRange = bottom - top;
        hRange = right-left;
        
        drawGraph(g);
        drawHTicks(g);
        drawPTicks(g);
        drawPhase(g, list);
       
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void drawGraph(Graphics g)
    {
        g.drawLine(left, top, left, bottom);
        g.drawLine(left, bottom, right, bottom);
    }
    
    public void drawPhase(Graphics g, DataList list)
    {
        for (DataPair nextSet : list)
        {
            int pred = nextSet.getP();
            int herb = nextSet.getH();
            
            int x = left + ((herb-herbMin)*hRange/herbRange);
            int y = bottom - ((pred-predMin)*vRange/predRange);
            
            
            g.setColor(Color.black);
            g.drawOval(x, y, 5, 5);
        }
        
    }
    
    public void drawHTicks(Graphics g)
    {
        for(int x = (top+hRange)/10; x>top; x-=hRange/10)
        {
            g.drawLine(left+x, bottom-5, left+x, bottom+5);
        }
        
    }
    
    public void drawPTicks(Graphics g)
    {
        for(int x = vRange; x>0; x-=vRange/10)
        {
            g.drawLine(left+5, bottom-x, left-5, bottom-x);
        }
    }

}
